{"ast":null,"code":"var _jsxFileName = \"/Users/bacco/Desktop/React-Hooks-Context-EX/src/App.js\";\nimport React, { Fragment, Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport About from './components/pages/About';\nimport Navbar from './components/layout/Navbar';\nimport Search from './components/users/Search';\nimport \"./App.css\";\nconst USER = 'd811de7f78bffecfed6c';\nconst PASS = '5783819d291da5b5ee8fed8a42f9900dd57d8760';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      users: [],\n      user: {}\n    };\n\n    this.searchUsers = async text => {\n      if (text === '') {\n        this.componentDidMount();\n      }\n\n      ;\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=\n            ${text}\n                &client_id=\n            ${USER}\n                &client_secret=\n            ${PASS}`);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/\n            ${username}\n                ?client_id=\n            ${USER}\n                &client_secret=\n            ${PASS}`);\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => {\n      this.setState({\n        users: [],\n        loading: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const res = await axios.get(`https://api.github.com/users?client_id=\n            ${USER}\n                &client_secret=\n            ${PASS}`);\n    this.setState({\n      users: res.data,\n      loading: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          users = _this$state.users,\n          loading = _this$state.loading;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      title: \"Github Finder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: users.length > 0 ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Users, {\n        loading: loading,\n        users: users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/user/:login\",\n      render: props => React.createElement(User, Object.assign({}, props, {\n        user: user,\n        getUser: this.getUser,\n        loading: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })))));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/bacco/Desktop/React-Hooks-Context-EX/src/App.js"],"names":["React","Fragment","Component","BrowserRouter","Router","Switch","Route","axios","Users","User","About","Navbar","Search","USER","PASS","App","state","loading","users","user","searchUsers","text","componentDidMount","setState","res","get","data","items","getUser","username","clearUsers","render","props","length"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport { BrowserRouter \n           as Router, Switch, Route } from 'react-router-dom';\n\nimport axios  from 'axios';\nimport Users  from './components/users/Users';\nimport User   from './components/users/User';\nimport About  from './components/pages/About';\nimport Navbar from './components/layout/Navbar';\nimport Search from './components/users/Search';\n\nimport \"./App.css\";\n\nconst USER = 'd811de7f78bffecfed6c';\nconst PASS = '5783819d291da5b5ee8fed8a42f9900dd57d8760';\n\nclass App extends Component {\n    state = {\n        loading: false,\n        users  : []  ,\n        user   : {}\n    }\n    async componentDidMount () {\n\n        this.setState({ loading: true });\n        const res = await axios.get(`https://api.github.com/users?client_id=\n            ${USER}\n                &client_secret=\n            ${PASS}`);\n\n        this.setState({\n            users  : res.data,\n            loading: false\n        })\n    };\n\n    searchUsers = async ( text ) => {\n\n        if (text === '') {\n            this.componentDidMount();\n        };\n\n        this.setState({ loading: true });\n        \n        const res = await axios.get(`https://api.github.com/search/users?q=\n            ${text}\n                &client_id=\n            ${USER}\n                &client_secret=\n            ${PASS}`);\n\n        this.setState({\n            users  : res.data.items,\n            loading: false\n        })\n    };\n\n    getUser = async ( username ) => {\n        this.setState({ loading: true });\n        \n        const res = await axios.get(`https://api.github.com/users/\n            ${username}\n                ?client_id=\n            ${USER}\n                &client_secret=\n            ${PASS}`);\n\n        this.setState({\n            user   : res.data,\n            loading: false\n        })\n    }\n\n    clearUsers = () => {\n        this.setState({\n            users  : [],\n            loading: false\n        })\n\n    };\n\n\n    render() {\n        \n        const { user, users, loading} = this.state;\n\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Navbar title = 'Github Finder'/>\n                    <div className = 'container'>\n                        <Switch>\n                            <Route exact path = '/'\n                                render = { props => (\n                                    <Fragment>\n                                        <Search searchUsers = { this.searchUsers } \n                                                clearUsers  = { this.clearUsers }\n                                                showClear   = { users.length > 0 ? true : false}/>\n                \n                                        <Users  loading     = { loading } \n                                                users       = { users } /> \n\n                                    </Fragment>\n                                )} \n                            />\n                            <Route exact path = '/about' component = {About} />\n                            <Route exact path = '/user/:login' \n                                render = { props => (\n                                       <User { ...props } \n                                        user    = { user } \n                                        getUser = { this.getUser } \n                                        loading = 'loading'\n                                    />\n                                )} \n                            />\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}