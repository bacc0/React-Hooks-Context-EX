{"ast":null,"code":"var _jsxFileName = \"/Users/bacco/Desktop/React-Hooks-Context-EX/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport \"./App.css\";\nimport Navbar from './Components/layout/Navbar';\nimport Users from './Components/users/Users';\nimport Search from './Components/users/Search';\nimport axios from 'axios';\nconst USER = 'd811de7f78bffecfed6c';\nconst PASS = '5783819d291da5b5ee8fed8a42f9900dd57d8760';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      users: []\n    };\n\n    this.searchUsers = async text => {\n      if (text === '') {\n        this.componentDidMount();\n      }\n\n      ;\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=\n            ${text}\n                &client_id=\n            ${USER}\n                &client_secret=\n            ${PASS}`);\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => {\n      this.setState({\n        users: [],\n        loading: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const res = await axios.get(`https://api.github.com/users?client_id=\n            ${USER}\n                &client_secret=\n            ${PASS}`);\n    this.setState({\n      users: res.data,\n      loading: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          users = _this$state.users,\n          loading = _this$state.loading;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      title: \"Github Finder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Search, {\n      searchUsers: this.searchUsers,\n      clearUsers: this.clearUsers,\n      showClear: users.length > 0 ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Users, {\n      loading: loading,\n      users: users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bacco/Desktop/React-Hooks-Context-EX/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Navbar","Users","Search","axios","USER","PASS","App","state","loading","users","searchUsers","text","componentDidMount","setState","res","get","data","items","clearUsers","render","props","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter \n         as Router, Switch, Route } from 'react-router-dom';\nimport \"./App.css\";\nimport Navbar from './Components/layout/Navbar';\nimport Users  from './Components/users/Users';\nimport Search from './Components/users/Search';\nimport axios  from 'axios';\n\nconst USER = 'd811de7f78bffecfed6c';\nconst PASS = '5783819d291da5b5ee8fed8a42f9900dd57d8760';\n\nclass App extends Component {\n    state = {\n        loading: false,\n        users  : []  \n    }\n    async componentDidMount () {\n\n        this.setState({ loading: true });\n        const res = await axios.get(`https://api.github.com/users?client_id=\n            ${USER}\n                &client_secret=\n            ${PASS}`);\n\n        this.setState({\n            users  : res.data,\n            loading: false\n        })\n    }\n\n    searchUsers = async ( text ) => {\n\n        if (text === '') {\n            this.componentDidMount();\n        };\n\n        this.setState({ loading: true });\n        \n        const res = await axios.get(`https://api.github.com/search/users?q=\n            ${text}\n                &client_id=\n            ${USER}\n                &client_secret=\n            ${PASS}`);\n\n        this.setState({\n            users  : res.data.items,\n            loading: false\n        })\n    }\n\n    clearUsers = () => {\n        this.setState({\n            users  : [],\n            loading: false\n        })\n\n    }\n\n\n    render() {\n        \n        const { users, loading} = this.state;\n\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Navbar title = 'Github Finder'/>\n                    <div className = 'container'>\n                        <Switch>\n                            <Route exact path = '/'\n                                   render = { props => (\n                                        <Fragment>\n                                            \n                                        </Fragment>\n                                   )} \n                            />\n\n                            \n                        </Switch>\n\n                        <Search searchUsers = { this.searchUsers } \n                                clearUsers  = { this.clearUsers }\n                                showClear   = { users.length > 0 ? true : false}/>\n\n                        <Users  loading     = { loading } \n                                users       = { users } /> \n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}