{"ast":null,"code":"import _slicedToArray from \"/Users/bacco/Desktop/React-Hooks-Context-EX/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bacco/Desktop/React-Hooks-Context-EX/src/components/users/Search.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers\n}) => {\n  const _us = us,\n        _us2 = _slicedToArray(_us, 2),\n        text = _us2[0],\n        setText = _us2[1];\n\n  const onChange = e => this.setState({\n    text: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    this.props.searchUsers(this.state.text);\n    this.setState({\n      text: ''\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: this.onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    value: this.state.text,\n    onChange: this.onChange,\n    placeholder: \"Search Users...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), showClear && //  (&&) if that's TRUE show\n  React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.protoTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/bacco/Desktop/React-Hooks-Context-EX/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","searchUsers","showClear","clearUsers","us","text","setText","onChange","e","setState","target","value","onSubmit","preventDefault","props","state","protoTypes","func","isRequired","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA;AAA1B,CAAD,KAA4C;AAAA,cAE3BC,EAF2B;AAAA;AAAA,QAE7CC,IAF6C;AAAA,QAEvCC,OAFuC;;AAIrD,QAAMC,QAAQ,GAAIC,CAAD,IAAQ,KAAKC,QAAL,CAAc;AAAEJ,IAAAA,IAAI,EAAEG,CAAC,CAACE,MAAF,CAASC;AAAjB,GAAd,CAAzB;;AACA,QAAMC,QAAQ,GAAIJ,CAAD,IAAQ;AACbA,IAAAA,CAAC,CAACK,cAAF;AACA,SAAKC,KAAL,CAAWb,WAAX,CAAuB,KAAKc,KAAL,CAAWV,IAAlC;AACA,SAAKI,QAAL,CAAc;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAd;AACX,GAJD;;AAOA,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAM,IAAA,QAAQ,EAAI,KAAKO,QAAvB;AAAiC,IAAA,SAAS,EAAG,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEM;AAAO,IAAA,IAAI,EAAU,MAArB;AACY,IAAA,IAAI,EAAU,MAD1B;AAEY,IAAA,KAAK,EAAW,KAAKG,KAAL,CAAWV,IAFvC;AAGY,IAAA,QAAQ,EAAQ,KAAKE,QAHjC;AAIY,IAAA,WAAW,EAAG,iBAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,EASM;AAAO,IAAA,IAAI,EAAQ,QAAnB;AACY,IAAA,KAAK,EAAO,QADxB;AAEY,IAAA,SAAS,EAAG,wBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATN,CADN,EAgBQL,SAAS,IAAO;AAEZ;AAAQ,IAAA,SAAS,EAAG,yBAApB;AACY,IAAA,OAAO,EAAOC,UAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBZ,CADN;AAwBL,CApCD;;AAsCAH,MAAM,CAACgB,UAAP,GAAoB;AACdf,EAAAA,WAAW,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADd;AAEdf,EAAAA,UAAU,EAAGJ,SAAS,CAACkB,IAAV,CAAeC,UAFd;AAGdhB,EAAAA,SAAS,EAAIH,SAAS,CAACoB,IAAV,CAAeD;AAHd,CAApB;AAMA,eAAelB,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nconst Search = ({ searchUsers, showClear, clearUsers }) => {\n\n      const [ text, setText ] = us\n\n      const onChange = (e) =>  this.setState({ text: e.target.value });\n      const onSubmit = (e) =>  { \n                  e.preventDefault(); \n                  this.props.searchUsers(this.state.text);\n                  this.setState({ text: '' })\n      };\n      \n\n      return (\n            <div>\n                  <form onSubmit = {this.onSubmit} className = 'form'>\n                        \n                        <input type        = 'text' \n                                    name        = 'text'\n                                    value       = { this.state.text }\n                                    onChange    = { this.onChange }\n                                    placeholder = 'Search Users...'\n                        />\n                                    \n                        <input type      = 'submit'\n                                    value     = 'Search'\n                                    className = 'btn btn-dark btn-block'\n                        />\n                  </form>\n\n                  { showClear &&    //  (&&) if that's TRUE show\n                  \n                        <button className = 'btn btn-light btn-block'\n                                    onClick   = { clearUsers }>Clear</button>\n                  }\n            </div>\n      )\n}\n\nSearch.protoTypes = {\n      searchUsers: PropTypes.func.isRequired,\n      clearUsers : PropTypes.func.isRequired,\n      showClear  : PropTypes.bool.isRequired\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}