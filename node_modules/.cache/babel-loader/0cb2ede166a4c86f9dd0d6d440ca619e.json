{"ast":null,"code":"var _jsxFileName = \"/Users/bacco/Desktop/github-finde/src/Components/users/Users.js\";\nimport React from 'react';\nimport UserItem from './UsersItem';\nimport Spinner from '../layout/Spinner';\n\nconst Users = ({\n  users,\n  loading\n}) => {\n  if (!loading) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      style: userStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, users.map(user => React.createElement(UserItem, {\n      key: user.id,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })));\n  }\n};\n\nconst userStyle = {\n  display: 'grid',\n  gridGap: '1rem',\n  gridTemplateColumns: 'repeat(3, 1fr)'\n};\nexport default Users;","map":{"version":3,"sources":["/Users/bacco/Desktop/github-finde/src/Components/users/Users.js"],"names":["React","UserItem","Spinner","Users","users","loading","userStyle","map","user","id","display","gridGap","gridTemplateColumns"],"mappings":";AAAA,OAAOA,KAAP,MAAqB,OAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,OAAP,MAAqB,mBAArB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAEhC,MAAI,CAACA,OAAL,EAAc;AACR,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACL,GAFD,MAEO;AACD,WACM;AAAK,MAAA,KAAK,EAAKC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACOF,KAAK,CAACG,GAAN,CAAYC,IAAD,IACN,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAMA,IAAI,CAACC,EAAxB;AACY,MAAA,IAAI,EAAKD,IADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CADP,CADN;AAQL;AACN,CAdD;;AAgBA,MAAMF,SAAS,GAAG;AACZI,EAAAA,OAAO,EAAG,MADE;AAEZC,EAAAA,OAAO,EAAG,MAFE;AAGZC,EAAAA,mBAAmB,EAAE;AAHT,CAAlB;AAMA,eAAeT,KAAf","sourcesContent":["import React    from 'react';\nimport UserItem from './UsersItem';\nimport Spinner  from '../layout/Spinner'\n\nconst Users = ({ users, loading }) => {\n\n      if (!loading) {\n            return <Spinner />\n      } else {\n            return (\n                  <div style = { userStyle } >\n                        {users.map( (user) => (\n                              <UserItem key  = { user.id} \n                                          user = { user } />\n                        ))} \n                  </div>\n            )  \n      }\n}\n\nconst userStyle = {\n      display : 'grid',\n      gridGap : '1rem',\n      gridTemplateColumns :'repeat(3, 1fr)'\n};\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}